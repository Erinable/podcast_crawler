repos:
  # Rust-specific hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        stages: [pre-commit]
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: check-yaml
        stages: [pre-commit]
      - id: check-added-large-files
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]

  # Rust formatting and linting
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
        name: Rust Format
        entry: rustfmt
        language: system
        types: [rust]
        stages: [pre-commit]

      - id: clippy
        name: Rust Clippy
        entry: cargo clippy
        language: system
        types: [rust]
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Security checks
  - repo: https://github.com/rustsec/audit-check
    rev: v1.1.1
    hooks:
      - id: audit-check
        stages: [pre-push]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        name: Markdown Lint
        entry: markdownlint
        language: node
        types: [markdown]
        stages: [pre-commit]

  # TOML formatting
  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
    rev: v2.7.0
    hooks:
      - id: pretty-format-toml
        name: TOML Formatter
        args: [--autofix]
        stages: [pre-commit]

  # Environment and secret scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect Secrets
        entry: detect-secrets-hook
        language: python
        stages: [pre-push]

  # Custom hooks
  - repo: local
    hooks:
      - id: update-changelog
        name: Update Changelog
        entry: ./scripts/update_changelog.sh
        language: script
        pass_filenames: false
        always_run: true
        stages: [pre-push]

# Global configuration
default_language_version:
  python: python3.9

default_stages: [pre-commit, pre-push]
fail_fast: true

minimum_pre_commit_version: '2.20.0'
